apply plugin:"groovy"
apply plugin:"idea"

repositories {
    mavenCentral()
    mavenRepo url: "http://m2repo.spockframework.org/snapshots"
}

dependencies {
    def groovyVersion = "1.8.6"
    def gebVersion = "0.7.0"
    def seleniumVersion = "2.21.0"
    def spockVersion = "0.6-groovy-1.8"
    
    groovy "org.codehaus.groovy:groovy-all:$groovyVersion"          
    
    testCompile "org.codehaus.geb:geb-core:$gebVersion",
                "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion",
                "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion",
                "org.seleniumhq.selenium:selenium-htmlunit-driver:$seleniumVersion",
                "org.spockframework:spock-core:$spockVersion",
                "org.codehaus.geb:geb-spock:$gebVersion",
                "junit:junit:4.8.2",
                "org.apache.poi:poi:3.7",
                "commons-lang:commons-lang:2.3"
                
    testRuntime "com.h2database:h2:1.3.155"
}

tasks.addRule("Pattern: test<TestClass>: Runs a single test or a pattern of tests") { String taskName ->
    final String prefix = "test"
    if (taskName.startsWith(prefix) && taskName.length() > prefix.length()) {
        logger.info("SingleTestExecution: $taskName matches pattern")

        // create a dummy task for the task name specified on the command line
        Task dummyTask = task(taskName)
		dummyTask.dependsOn clean

        // remove prefix from the specified task name
        def className = taskName - prefix

        // define an include that supports the specified naming pattern, incl. camel-case notation
        def camelCaseTaskName = className[0] + className.substring(1).collect() { it == it.toUpperCase() ? "*$it" : it }.join("")
        def testIncludes = WrapUtil.toSet(String.format("**/%s*Spec.class", camelCaseTaskName))
        logger.info("SingleTestExecution: include pattern <$testIncludes>")

        // make all Test tasks a dependency of the dummy task and reset the includes
        tasks.withType(Test) { Task testTask ->
            logger.info("SingleTestExecution: apply include pattern to Test task <$testTask.name>")
                testTask.includes = testIncludes
                dummyTask.dependsOn testTask
        }
    }
}

task loadConfig << {
    def props = new Properties()
    def config = file('config.properties').withReader { reader -> 
        props.load(reader)
    }
}

